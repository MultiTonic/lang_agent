(** File generated by coq-of-ocaml *)
Require Import CoqOfOCaml.


Module archetype_type.
  Record record {t_name t_attributes t_story t_embodiment t_identity : Set} :
    Set := Build {
    attribute : t_identity -> t_name -> t_attributes;
    pay_tribute : t_identity -> t_name -> t_attributes;
    pay_homage : t_identity -> t_name -> t_attributes;
    archetype_instance : t_identity -> t_name -> t_embodiment;
    story : t_name -> t_story;
  }.
  Arguments record : clear implicits.
  Definition with_attribute
    {t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity} attribute
    (r : record t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity) :=
    Build t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity
      attribute r.(pay_tribute) r.(pay_homage) r.(archetype_instance) r.(story).
  Definition with_pay_tribute
    {t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity} pay_tribute
    (r : record t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity) :=
    Build t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity
      r.(attribute) pay_tribute r.(pay_homage) r.(archetype_instance) r.(story).
  Definition with_pay_homage
    {t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity} pay_homage
    (r : record t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity) :=
    Build t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity
      r.(attribute) r.(pay_tribute) pay_homage r.(archetype_instance) r.(story).
  Definition with_archetype_instance
    {t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity}
    archetype_instance
    (r : record t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity) :=
    Build t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity
      r.(attribute) r.(pay_tribute) r.(pay_homage) archetype_instance r.(story).
  Definition with_story
    {t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity} story
    (r : record t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity) :=
    Build t_t_name t_t_attributes t_t_story t_t_embodiment t_t_identity
      r.(attribute) r.(pay_tribute) r.(pay_homage) r.(archetype_instance) story.
End archetype_type.
Definition archetype_type := archetype_type.record.

Definition archetype_instance {A B C D E : Set}
  (archetype_type0 : archetype_type A B C D E) : E -> A -> D :=
  archetype_type0.(archetype_type.archetype_instance).
