<path> ::= <physical_object> | <physical_object> "->" <path>

<physical_object> ::= "#" <object_name> ["("[<properties>]")"]

<properties> ::= <property> ["," <properties>]

<property> ::= <property_name> "=" <property_value>

<property_name> ::= /[a-zA-Z_][a-zA-Z0-9_]*/

<property_value> ::= <number> | <string> | <boolean> | <object> | <array> | <function>

<number> ::= ["+"|"-"] <digit> [<digits>] ["." <digits>] [e|E ["+"] <digit> [<digits>]]

<string> ::= "\"" <characters> "\""

<characters> ::= <character> [<characters>]

<character> ::= ~["\"\\\]

<boolean> ::= "true" | "false"

<object> ::= "{" ["#" <property_name> ":" <property_value> ["," <properties>]] "}"

<array> ::= "[" [<elements>] "]"

<elements> ::= <element> ["," <elements>]

<element> ::= <property_value> | "#" <property_name>

<function> ::= "[function" <parameters> "]" <statements> "[endfunction]"

<parameters> ::= ["(" <parameter_name> ["," <parameters>] ")"]

<parameter_name> ::= /[a-zA-Z_][a-zA-Z0-9_]*/

<statements> ::= <statement> [";" <statements>]

<statement> ::= <assignment> | <if_statement> | <while_statement> | <for_statement> | <return_statement> | <call_statement>

<assignment> ::= "#" <variable_name> "=" <expression>

<variable_name> ::= /[a-zA-Z_][a-zA-Z0-9_]*/

<if_statement> ::= "if" <condition> "then" <statements> ["else" <statements>] "end"

<while_statement> ::= "while" <condition> "repeat" <statements> "end"

<for_statement> ::= "for" "#" <variable_name> "=" <start> "to" <end> ["step" <step>] "do" <statements> "end"

<return_statement> ::= "return" [<expression>] ";"

<call_statement> ::= "[invoke" <function_name> "(" <arguments> ")]"

<arguments> ::= ["#" <argument_name> ["," <arguments>]]

<argument_name> ::= /[a-zA-Z_][a-zA-Z0-9_]*/

<expression> ::= <term> [<add_op> <expression>]

<term> ::= <factor> [<mul_op> <term>]

<factor> ::= <primary> | "!" <factor> | "-" <factor>

<primary> ::= <literal> | "#" <variable_name> | "[access" "#" <object_name> "." <property_name> "]" | "[call" <function_name> "(" <arguments> ")]"

<add_op> ::= "+" | "-"

<mul_op> ::= "*" | "/"

<literal> ::= <number> | <string> | <boolean>

<object_name> ::= /[a-zA-Z_][a-zA-Z0-9_]*/

<condition> ::= <expression> <rel_op> <expression>

<rel_op> ::= "==" | "!=" | "<" | "<=" | ">" | ">="
