
#+begin_src input
 ENDSRC . Please rewrite it to be more beautiful and in EBNF form. We are going to use the following TARGET: BEGINTARGET comment ::= "#" [a-zA-Z0-9 \t]*
letter ::= [a-zA-Z]
digit ::= [0-9]
S ::= ( " " | "\n" | "\t" | "\r"  )
symbol ::= "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"  | "'" |  "=" | "|" | "." | "," | ";" | "-"        | "+" | "*" | "?" 
character ::= letter | digit | symbol | "_" | " "
identifier ::= letter ( letter | digit | "_" )*
terminal ::= "'" character  "'"  ( character  "'" )  "'"
terminator ::= (";" | ".") 
term ::= "("   S   rhs   S   ")"      | "["   S   rhs   S   "]"      | "{"   S   rhs   S   "}"      | terminal      | identifier
factor ::= term  S  "?"         | term   S   "*"        | term   S   "+"        | term   S   "-"   S   term        | term   S
concatenation ::= ( S   factor   S   "," ? ) +
alternation ::= ( S   concatenation   S   "|" ? ) +
rhs ::= alternation
lhs ::= identifier
rule ::= lhs   S   "="   S   rhs   S   terminator comment*
root ::= comment* ( S   rule   S ) * ENDTARGET as our target grammar format. Please rewrite SRC into TARGET. You are to only respond using the target custom GBNF grammar and put  descriptions or comments at the end of the rule with a #, see the grammar for rules. Please start with a comment using '#' to start comments on a new line. 

#+end_src
#+begin_src output mixtral
 Result: BEGINTARGET

# A production is defined as a non-terminal symbol followed by an '=' sign,
# then one or more alternatives separated by '|', and ending in a terminator.
# There can be zero or more comments following the terminator.
production ::= lhs "=" rhs terminator (comment)*

# A non-terminal symbol is defined as an identifier followed by optional whitespace.
lhs ::= identifier S

# The right hand side of a production consists of one or more alternatives,
# separated by '|'. Each alternative is made up of one or more concatenations,
# separated by whitespace.
rhs ::= alternation
alternation ::= (concatenation S)+ ("|" S)?
concatenation ::= (factor S ","?)+
factor ::= term S [ "?" | "*" | "+" | (“-” S term) ]

# A terminal symbol is defined as a single quote, followed by a character,
# possibly followed by more characters enclosed in quotes, and ending with a single quote.
terminal ::= "'" character (character "'")* "'"

# A rule consists of a production, optionally preceded and/or followed by whitespace,
# and zero or more comments following the production on the same line.
rule ::= S production S

# The root symbol is defined as any number of comments, followed by one or more rules,
# separated and/or preceded by whitespace, and ending in ENDTARGET.
root ::= comment* (S rule S)* ENDTARGET

ENDTARGET
#+end_src
