
#+begin_src input
 ENDSRC . Please rewrite it to be more beautiful and in EBNF form. We are going to use the following TARGET: BEGINTARGET comment ::= "#" [a-zA-Z0-9 \t]*
letter ::= [a-zA-Z]
digit ::= [0-9]
S ::= ( " " | "\n" | "\t" | "\r"  )
symbol ::= "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"  | "'" |  "=" | "|" | "." | "," | ";" | "-"        | "+" | "*" | "?" 
character ::= letter | digit | symbol | "_" | " "
identifier ::= letter ( letter | digit | "_" )*
terminal ::= "'" character  "'"  ( character  "'" )  "'"
terminator ::= (";" | ".") 
term ::= "("   S   rhs   S   ")"      | "["   S   rhs   S   "]"      | "{"   S   rhs   S   "}"      | terminal      | identifier
factor ::= term  S  "?"         | term   S   "*"        | term   S   "+"        | term   S   "-"   S   term        | term   S
concatenation ::= ( S   factor   S   "," ? ) +
alternation ::= ( S   concatenation   S   "|" ? ) +
rhs ::= alternation
lhs ::= identifier
rule ::= lhs   S   "="   S   rhs   S   terminator comment*
root ::= comment* ( S   rule   S ) * ENDTARGET as our target grammar format. Please rewrite SRC into TARGET. You are to only respond using the target custom GBNF grammar and put  descriptions or comments at the end of the rule with a #, see the grammar for rules. Please start with a comment using '#' to start comments on a new line. 

#+end_src
#+begin_src output mixtral
 Result: # This is a rewritten version of SRC in the TARGET format

comment ::= "#" [a-zA-Z0-9 \t]*

letter ::= [a-zA-Z]
digit ::= [0-9]

S ::= ( " " | "\n" | "\t" | "\r"  )

symbol ::= "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"  | "'" |  "=" | "|" | "." | "," | ";" | "-"        | "+" | "*" | "?" 

character ::= letter | digit | symbol | "_" | " "

identifier ::= letter ( letter | digit | "_" )*

terminal ::= "'" character  "'"  ( character  "'" )  "'"

terminator ::= (";" | ".")

term ::= "(" S rhs S ")"
      | "[" S rhs S "]"
      | "{" S rhs S "}"
      | terminal
      | identifier

factor ::= term S "?"
        | term S "*"
        | term S "+"
        | term S "-" S term
        | term S

concatenation ::= (S factor S "," ? )+

alternation ::= (S concatenation S "|" ? )+

rhs ::= alternation

lhs ::= identifier

rule ::= lhs S "=" S rhs S terminator comment*

root ::= comment* (S rule S)* ENDTARGET

; This grammar defines a simple expression language using GBNF
; It includes rules for comments, identifiers, terminals, terms, factors, concatenation and alternation
; Each rule has a description or comment at the end of it to explain its purpose
; The grammar can be used to parse expressions written in this language
; It is designed to be easily extended with new rules and terminal symbols
#+end_src
