
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here is an example of how you can define your EBNF grammar with the required naming conventions:
```bash
<prd_folder_tkn_input> ::= <prd_grammar_tkn_A>
                         | <prd_previous_results_tkn_D>
                         | <prd_new_example_tkn_C>

<prd_grammar_tkn_A> ::= 'A'

<prd_previous_results_tkn_D> ::= 'D'

<prd_new_example_tkn_C> ::= 'C'

<prd_created_new_output_tkn_D> ::= <prd_grammar_tkn_A>
                                | <prd_previous_results_tkn_D>
                                | <prd_new_example_tkn_C>

<prd_test_tkn> ::= 'Test' <prd_created_new_output_tkn_D>

<prd_if_good_tkn> ::= 'If' <prd_test_tkn_good>

<prd_repeat_loop_tkn> ::= 'repeat' <prd_loop_tkn> <prd_times_tkn_3>

<prd_start_with_tkn> ::= 'start' <prd_folder_tkn_input>
                     | <prd_rewrite_tkn> <prd_it_tkn> <prd_to_suit_our_needs_tkn>

<prd_loop_tkn> ::= 'loop'

<prd_times_tkn_3> ::= '3'
```
In this example, each rule starts with `prd_` and each token is called `tkn`. If a token is used in a rule, it is named `prd_<prod name>_tkn_<token name>`. For example, the input token for the `<prd_folder_tkn_input>` production rule is named `prd_input_tkn_folder`.
#+end_src
