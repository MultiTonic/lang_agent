
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here's the revised code following your naming conventions:

(*

  Folder EBNF grammar

   take inputs :
   - grammar (A)
   - Previous Results (D initially)
   - Initial example (B)
   - New Example (C)
   
   Create new output (D') by applying the rules of the grammar (A) to the previous results (D) and examples (B, C).
   Test D'. If good, repeat loop with new D'. Otherwise feed error back to create new D' up to 3 times.

*)

%start folder

%%

folder -> prd_Folder_tkn_Grammar ':' A previous_results ';' initial_example ';' new_example ';' created_output '.'.
previous_results -> prd_PreviousResults_tkn_Name '=' D.
initial_example -> prd_InitialExample_tkn_Name '=' B.
new_example -> prd_NewExample_tkn_Name '=' C.
created_output -> prd_CreatedOutput_tkn_Name '=' D'.
A -> /* Include grammar rules here */.
B -> /* Include initial example rules here */.
C -> /* Include new example rules here */.
D -> /* Include previous results rules here */.
D' -> /* Include created output rules here */.

%%

Note: You will need to replace the placeholders (A, B, C, D, D') with your actual grammar, examples, and results productions. The naming convention for tokens has been applied throughout the revised code.
#+end_src
