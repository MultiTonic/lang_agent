
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here's an example of how you could define your detailed EBNF grammar with the naming conventions you specified:

```
(* EBNF grammar for a folder containing files and subfolders *)

type tkn =
  | L_CURLY
  | R_CURLY
  | COMMA
  | COLON
  | WS            (* whitespace character(s)     *)
  | IDENT of string  (* identifier                   *)
  | STRING of string  (* string literal             *)
  | INT of int        (* integer literal            *)

and prd =
  | Prd_Folder : tkn L_CURLY * (prd_elem list) * tkn R_CURLY -> prd
  | Prd_Elem_List : prd_elem list -> prd
  | Prd_Elem : prd_elem -> prd

and prd_elem =
  | Prd_File : tkn IDENT col * tkn STRING -> prd_elem
  | Prd_Subfolder : tkn IDENT col * prd -> prd_elem

and col = tkn COMMA *| tkn COLON

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
```

In this grammar, each rule is prefixed with `Prd_`, and each token is prefixed with `tkn`. If a token is used in a rule, it is given the name `prd_<prod name>_tkn_<token name>`, as specified. For example, the left curly brace token is named `tkn L_CURLY`, and is used in the rule for `Prd_Folder`.

I hope this helps! Let me know if you have any questions or need further clarification.
#+end_src
