
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here is an example of how you could define your EBNF grammar with the specified naming conventions:

<BNF> ::= 'grammar' prd\_grammar\_tkn '::=' {prd}

prd ::= prd\_name\_tkn '=' [expression] ';'

expression ::= [alternative]

alternative ::= sequence ('|' sequence)*

sequence ::= {'element'}

element ::= terminal
| nonterminal
| group
| option
| repetition

terminal ::= tkn\_character
| tkn\_string

nonterminal ::= prd\_name\_tkn

group ::= '(' expression ')'

option ::= '[' expression ']'

repetition ::= '{' expression '}'

prd\_name\_tkn := 'prd'\_[A-Za-z0-9_]+

tkn\_character := '\'' [A-Za-z0-9_] '\'''

tkn\_string := '"' [A-Za-z0-9_ ]* '"'
\*/

let rec fold\_left op acc = function
| [] -> acc
| h :: t -> fold\_left op (op acc h) t

In this example, the BNF defines a set of production rules (prd), each with a name that starts with "prd\_". Terminals are represented by either a single character or a string, both of which are enclosed in single quotes. Nonterminals are represented by the names of production rules. Groups, options, and repetitions are defined using parentheses, brackets, and braces, respectively.

You can use this EBNF as a starting point for your system and modify it to suit your specific needs.
#+end_src
