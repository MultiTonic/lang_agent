
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here is an example of an EBNF grammar with the requested naming conventions:
```kotlin
<prd_grammar_tkn_A> ::= <prd_take_inputs_tkn_A> | <prd_take_inputs_tkn_B>

<prd_take_inputs_tkn_A> ::= "take" "inputs" ":" <prd_grammar_tkn_A> ";"

<prd_take_inputs_tkn_B> ::= "take" "inputs" ":" <prd_grammar_tkn_B> ";"

<prd_Previous_Results_tkn_D> ::= "Previous" "Results" ":" <prd_token_tkn_D> ";"

<prd_Initial_example_tkn_B> ::= "Initial" "example" ":" <prd_token_tkn_B> ";"

<prd_New_Example_tkn_C> ::= "New" "Example" ":" <prd_token_tkn_C> ";"

<prd_Created_new_output_tkn_D> ::= "Created" "new" "output" ":" <prd_token_tkn_D> ";"

<prd_test_tkn> ::= "test"

<prd_if_good_tkn> ::= "if" "good,"

<prd_repeat_loop_tkn> ::= "repeat" "loop" "with" "new"

<prd_otherwise_tkn> ::= "otherwise" "feed" "error" "back" "to" "create" "new"

<prd_up_to_3_times_tkn> ::= "up" "to" "3" "times" ";"

<prd_token_tkn_D> ::= <D>

<prd_token_tkn_B> ::= <B>

<prd_token_tkn_C> ::= <C>

<start_symbol> ::= <prd_grammar_tkn_A>
```
In this example, every rule starts with "prd\_" followed by the name of the production. Each token in a rule is named "prd\_<production name>\_tkn\_<token name>". For example, the production for `take inputs : A;` has the rule name "prd\_take\_inputs\_tkn\_A", and it uses tokens with names like "prd\_grammar\_tkn\_A" and "prd\_take\_inputs\_tkn\_A".

Note that <D>,<B>,<C> are not defined in the above EBNF, they should be replaced by corresponding ebnf rules.
#+end_src
