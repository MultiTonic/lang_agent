
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here is an example of an EBNF grammar that meets your requirements:

<PRODUCTIONS> ::=
    prd\_folder_tkn_grammar = A
    | prd\_folder\_tkn\_previousResults = D
    | prd\_folder\_tkn\_initialExample = B
    | prd\_folder\_tkn\_newExample = C
    | prd\_folder\_tkn\_output = D
    | prd\_foldLeft\_tkn\_op = op
    | prd\_foldLeft\_tkn\_acc = acc
    | prd\_foldLeft\_tkn\_list = [h | t]
    | prd\_foldLeft\_tkn\_recursiveCall = fold\_left
<ENDPRODUCTIONS>

<TOKENIZED PRODUCTIONS> ::=
    tkn\_A = 'A'
    | tkn\_D = 'D'
    | tkn\_B = 'B'
    | tkn\_C = 'C'
    | tkn\_op = <operation symbol>
    | tkn\_acc = <accumulator symbol>
    | tkn\_h = <head of list symbol>
    | tkn\_t = <tail of list symbol>
<ENDTOKENIZED PRODUCTIONS>

In this EBNF grammar, each production starts with "prd\_" followed by the name of the production. Each token in a production is represented as "tkn\_" followed by the name of the token. If a token is used in a production, it is named "prd\_<productionName>\_tkn\_<tokenName>".

The <PRODUCTIONS> section defines the productions for the folder function, including the recursive call to fold\_left. The <TOKENIZED PRODUCTIONS> section defines the tokens used in the productions and their corresponding symbols.

Note that the specific symbol names for tkn\_op, tkn\_acc, tkn\_h, and tkn\_t are left open, as they will depend on the language or system being used.
#+end_src
