
#+begin_src input
We are bootstrapping a new system using EBNF grammars.
We want to make an ebnf grammar that is super detailed.
for each rule we want to create a nameing rule for the rules that have them all start with prd. each token should be called tkn.
if a token is used in a rule lets make it prd_<prod name>_tkn_<token name>
Here is the code we wrote so far 
(*
folder

   take inputs :
   grammar : A
   Previous Results : D initially, Initial example : B
   New Example : C
   Created new output D.
   Test D. If good, repeat loop with new D. Othewise feed error back to create new D up to 3 times.
   start with this following code and rewrite it to suit our needs.
*)

let rec fold_left op acc = function
  | []   -> acc
  | h :: t -> fold_left op (op acc h) t
                
 ENDSRC . Lets create a new EBNF that is more expressive and explicit.

#+end_src
#+begin_src output mixtral
 Result: Here is an example of an EBNF grammar with the requested naming conventions:
```
<prd_folder_rules> ::=
    'take' <prd_inputs_tkn_grammar> ':' <prd_results_tkn_D> ',' <prd_results_tkn_B>
    ',' <prd_new_example_tkn_C> <prd_action_tkn_created> <prd_output_tkn_D> '.' <prd_action_tkn_test> '.'
    <prd_conditional_tkn_if_good> ',' <prd_action_tkn_repeat_loop> '{' <num_3_tkn> '}'

<prd_inputs_tkn_grammar> ::= <prd_terminal_tkn_A>

<prd_results_tkn_D> ::= <prd_terminal_tkn_D>

<prd_new_example_tkn_C> ::= <prd_terminal_tkn_C>

<prd_action_tkn_created> ::= 'created'

<prd_output_tkn_D> ::= <prd_terminal_tkn_D>

<prd_action_tkn_test> ::= 'test'

<prd_conditional_tkn_if_good> ::= 'if' <prd_terminal_tkn_good> ','

<prd_action_tkn_repeat_loop> ::= 'repeat' <prd_terminal_tkn_loop> '{'

<num_3_tkn> ::= <prd_terminal_tkn_3>
```
This EBNF grammar describes a `folder` rule, which has several child rules including `prd_inputs_tkn_grammar`, `prd_results_tkn_D`, `prd_new_example_tkn_C`, etc. Each of these child rules is defined by its own set of productions.

For example, the `prd_terminal_tkn_A` production would describe the terminal symbol "A" and the `prd_action_tkn_created` production describes the action "created".

This way you can have a more expressive and explicit ebnf that will help in understanding and maintaining your system.
#+end_src
